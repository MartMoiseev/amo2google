# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    google.tracker_id: '%env(TRACKING_ID)%'
    amo.status.new_lead: '%env(STATUS_NEW_LEAD)%'
    amo.status.test_period: '%env(STATUS_TEST_PERIOD)%'
    amo.status.paid_one_month: '%env(STATUS_PAID_ONE_MONTH)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\LeadsStatusListener:
        tags:
            - { name: kernel.event_listener, event: hook.leads.status }

    App\EventListener\LeadsAddListener:
        tags:
            - { name: kernel.event_listener, event: hook.leads.add }

    App\EventListener\LoggerListener:
        tags:
            - { name: kernel.event_listener, event: !php/const App\Event\Google\AnalyticsSendEvent::NAME }